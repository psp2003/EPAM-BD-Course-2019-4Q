1. Imagine you was asked to add new partition to your host for backup purposes. To simulate appearance of new physical disk in your server, please create new disk in Virtual Box (5 GB) and attach it to your virtual machine.
Also imagine your system started experiencing RAM leak in one of the applications, thus while developers try to debug and fix it, you need to mitigate OutOfMemory errors; you will do it by adding some swap space.
/dev/sdc - 5GB disk, that you just attached to the VM (in your case it may appear as /dev/sdb, /dev/sdc or other, it doesn't matter)
1.1. Create a 2GB   !!! GPT !!!   partition on /dev/sdc of type "Linux filesystem" (means all the following partitions created in the following steps on /dev/sdc will be GPT as well)
	sudo gdisk /dev/sdc
	n
	34
	+2G
	8300
1.2. Create a 512MB partition on /dev/sdc of type "Linux swap"
	n
	default
	+512M
	8200
	
	After all - write partitions
	w
1.3. Format the 2GB partition with an XFS file system
	[root@vm01 vit]# lsblk 
	NAME                 MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
	sda                    8:0    0    8G  0 disk 
	├─sda1                 8:1    0    1G  0 part /boot
	└─sda2                 8:2    0    7G  0 part 
	  ├─centos_vm01-root 253:0    0  6.2G  0 lvm  /
	  └─centos_vm01-swap 253:1    0  820M  0 lvm  [SWAP]
	sdb                    8:16   0    8G  0 disk 
	└─sdb1                 8:17   0  300M  0 part /mnt/part1
	sdc                    8:32   0    5G  0 disk 
	├─sdc1                 8:33   0    2G  0 part #to XFS
	└─sdc2                 8:34   0  512M  0 part #for SWAP
	sr0                   11:0    1 1024M  0 rom  
	[root@vm01 vit]# mkfs -t xfs /dev/sdc1
	meta-data=/dev/sdc1              isize=512    agcount=4, agsize=131072 blks
			 =                       sectsz=512   attr=2, projid32bit=1
			 =                       crc=1        finobt=0, sparse=0
	data     =                       bsize=4096   blocks=524288, imaxpct=25
			 =                       sunit=0      swidth=0 blks
	naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
	log      =internal log           bsize=4096   blocks=2560, version=2
			 =                       sectsz=512   sunit=0 blks, lazy-count=1
	realtime =none                   extsz=4096   blocks=0, rtextents=0
1.4. Initialize 512MB partition as swap space
	root@vm01 vit]# mkswap /dev/sdc2 
	Setting up swapspace version 1, size = 524284 KiB
	no label, UUID=15123931-5d1f-4c73-a84a-b4f8fa15df47
	Add to /etc/fstab
	/dev/sdc2       swap    swap    defaults        0 0
	[root@vm01 vit]# swapon -a
	[root@vm01 vit]# swapon -s
	Filename                                Type            Size    Used    Priority
	/dev/dm-1                               partition       839676  0       -2
	/dev/sdc2                               partition       524284  0       -3
1.5. Configure the newly created XFS file system to persistently mount at /backup
	Add to /etc/fstab
	/dev/sdc1 /backup        xfs     defaults        0 0
	
	mkdir /backup
	mount -a
	[root@vm01 vit]# lsblk
	NAME                 MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
	sda                    8:0    0    8G  0 disk 
	├─sda1                 8:1    0    1G  0 part /boot
	└─sda2                 8:2    0    7G  0 part 
	  ├─centos_vm01-root 253:0    0  6.2G  0 lvm  /
	  └─centos_vm01-swap 253:1    0  820M  0 lvm  [SWAP]
	sdb                    8:16   0    8G  0 disk 
	└─sdb1                 8:17   0  300M  0 part /mnt/part1
	sdc                    8:32   0    5G  0 disk 
	├─sdc1                 8:33   0    2G  0 part /backup
	└─sdc2                 8:34   0  512M  0 part [SWAP]
	sr0                   11:0    1 1024M  0 rom 
1.6. Configure the newly created swap space to be enabled at boot
	See 1.4
1.7. Reboot your host and verify that /dev/sdc1 is mounted at /backup and that your swap partition  (/dev/sdc2) is enabled
	[root@vm01 vit]# reboot
	Last login: Sun Sep 29 08:49:59 2019 from msi_laptop
	[vit@vm01 ~]$ su
	Password: 
	[root@vm01 vit]# lsblk
	NAME                 MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
	sda                    8:0    0    8G  0 disk 
	├─sda1                 8:1    0    1G  0 part /boot
	└─sda2                 8:2    0    7G  0 part 
	  ├─centos_vm01-root 253:0    0  6.2G  0 lvm  /
	  └─centos_vm01-swap 253:1    0  820M  0 lvm  [SWAP]
	sdb                    8:16   0    8G  0 disk 
	└─sdb1                 8:17   0  300M  0 part /mnt/part1
	sdc                    8:32   0    5G  0 disk 
	├─sdc1                 8:33   0    2G  0 part /backup
	└─sdc2                 8:34   0  512M  0 part [SWAP]
	sr0                   11:0    1 1024M  0 rom  
	[root@vm01 vit]# swapon -s
	Filename                                Type            Size    Used    Priority
	/dev/sdc2                               partition       524284  0       -2
	/dev/dm-1                               partition       839676  0       -3
2. LVM. Imagine you're running out of space on your root device. As we found out during the lesson default CentOS installation should already have LVM, means you can easily extend size of your root device. So what are you waiting for? Just do it!
2.1. Create 2GB partition on /dev/sdc of type "Linux LVM"
	[root@vm01 vit]# gdisk /dev/sdc
	GPT fdisk (gdisk) version 0.8.10

	Partition table scan:
	  MBR: protective
	  BSD: not present
	  APM: not present
	  GPT: present

	Found valid GPT with protective MBR; using GPT.

	Command (? for help): n
	Partition number (3-128, default 3): 
	First sector (34-10485726, default = 5244928) or {+-}size{KMGTP}: 
	Last sector (5244928-10485726, default = 10485726) or {+-}size{KMGTP}: +2G
	Current type is 'Linux filesystem'
	Hex code or GUID (L to show codes, Enter = 8300): 8e00
	Exact type match not found for type code 008E; assigning type code for
	'Linux filesystem'
	Changed type of partition to 'Linux LVM'
	Command (? for help): w

	Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
	PARTITIONS!!

	Do you want to proceed? (Y/N): Y 
	OK; writing new GUID partition table (GPT) to /dev/sdc.
	Warning: The kernel is still using the old partition table.
	The new table will be used at the next reboot.
	The operation has completed successfully.
	[root@vm01 vit]# partprobe 
	[root@vm01 vit]# lsblk
	NAME                 MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
	sda                    8:0    0    8G  0 disk 
	├─sda1                 8:1    0    1G  0 part /boot
	└─sda2                 8:2    0    7G  0 part 
	  ├─centos_vm01-root 253:0    0  6.2G  0 lvm  /
	  └─centos_vm01-swap 253:1    0  820M  0 lvm  [SWAP]
	sdb                    8:16   0    8G  0 disk 
	└─sdb1                 8:17   0  300M  0 part /mnt/part1
	sdc                    8:32   0    5G  0 disk 
	├─sdc1                 8:33   0    2G  0 part /backup
	├─sdc2                 8:34   0  512M  0 part [SWAP]
	└─sdc3                 8:35   0    2G  0 part 
	sr0                   11:0    1 1024M  0 rom  
2.2. Initialize the partition as a physical volume (PV)
	[root@vm01 vit]# pvcreate /dev/sdc3
2.3. Extend the volume group (VG) of your root device using your newly created PV
	[root@vm01 vit]# vgextend centos_vm01 /dev/sdc3
2.4. Extend your root logical volume (LV) by 1GB, leaving other 1GB unassigned
	root@vm01 vit]# lvextend -L +1G /dev/centos_vm01/root 
	  Size of logical volume centos_vm01/root changed from <6.20 GiB (1586 extents) to <7.20 GiB (1842 extents).
	  Logical volume centos_vm01/root successfully resized.
	[root@vm01 vit]# lsblk 
	NAME                 MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
	sda                    8:0    0    8G  0 disk 
	├─sda1                 8:1    0    1G  0 part /boot
	└─sda2                 8:2    0    7G  0 part 
	  ├─centos_vm01-root 253:0    0  7.2G  0 lvm  / #resized
	  └─centos_vm01-swap 253:1    0  820M  0 lvm  [SWAP]
	sdb                    8:16   0    8G  0 disk 
	└─sdb1                 8:17   0  300M  0 part /mnt/part1
	sdc                    8:32   0    5G  0 disk 
	├─sdc1                 8:33   0    2G  0 part /backup
	├─sdc2                 8:34   0  512M  0 part [SWAP]
	└─sdc3                 8:35   0    2G  0 part 
	  └─centos_vm01-root 253:0    0  7.2G  0 lvm  /
	sr0                   11:0    1 1024M  0 rom  
2.5. Check current disk space usage of your root device
	See 2.4
2.6. Extend your root device filesystem to be able to use additional free space of root LV
	??
2.7. Verify that after reboot your root device is still 1GB bigger than at 2.5.
	??