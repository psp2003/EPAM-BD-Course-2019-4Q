Task 1
•Create variable list1, which contains int numbers from 1 to 9
	list1=[1,2,3,4,5,6,7,8,9]
•Create variable list2 assigning list1 to it; list2 = list1
	list2=list1
•Add 10 to list2
	list2.append(10)
•Remove first element from list2
	list2=list2[1:]
•Print content of list{1,2} variables
	print('list1:',list1,'list2:',list2)
•Create variable list3 assigning list1[:] to it;
	list3=list1[:]
•Add string ‘full copy magic’ to list3
	list3.add('full copy magic')
•Print content of list{1,3} variables
	print ('list1:', list1, ' , list3', list3)
Task 2
•Create function that greets user. It must return message: ‘Hello, Username!’. Also, function must correct username to title if given username is printed in lower or upper case, e.g. username / USERNAME.
•Call function multiple time for different names.
	def task2(name=input()):
	name = name[0].upper() + name[1:].lower()
	return(name)
Task 3
•Сreate class Dog which has method bark. This method accepts number of times dog barks. Default value is 1 and when called method must return message ‘BARK!!!’ given number of times, separated with space.
class Dog(object):
  def __init__(self):
      self.barkdef=1

  def bark(self):
    print('BARK!!!')

  def barks(self,c):
    out=""
    for i in range(0,c):
      out+="BARK!!! "
    print (out)
•Inherit class SmartDog from Dog class, add new method givepaw to it. Method must return message ‘Paw pat’.
	class SmartDog(Dog):
		def getpaw(self):
		print ("Paw pat")
•Create dogs, check that only smart dog can give a paw, and both dogs can bark
	normdog=Dog()
	normdog.bark()
		BARK!!!
	normdog.barks(5)
		BARK!!! BARK!!! BARK!!! BARK!!! BARK!!!
	normdog.getpaw()
		Traceback (most recent call last):
		File "<stdin>", line 1, in <module>
		AttributeError: 'Dog' object has no attr
	smart=SmartDog()
	smart.bark()
		BARK!!!
	smart.barks(2)
		BARK!!! BARK!!!
	smart.gitpaw()
		Paw pat


